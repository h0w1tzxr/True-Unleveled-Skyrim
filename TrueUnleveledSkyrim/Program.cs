using System;
using System.Threading.Tasks;
using Mutagen.Bethesda;
using Mutagen.Bethesda.Synthesis;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Plugins.Cache;
using TrueUnleveledSkyrim.Config;
using TrueUnleveledSkyrim.Patch;

namespace TrueUnleveledSkyrim
{
    public class Patcher
    {
        public static readonly Random Randomizer = new();
        public static Lazy<TUSConfig> ModSettings = null!;
        public static ILinkCache LinkCache { get; set; } = null!;

        public static async Task<int> Main(string[] args)
        {
            return await SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetAutogeneratedSettings(nickname: "Mod Settings", path: "settings.json", out ModSettings)
                .SetTypicalOpen(GameRelease.SkyrimSE, "TUS.esp")
                .Run(args);
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            LinkCache = state.LoadOrder.PriorityOrder.ToImmutableLinkCache();
            TUSConstants.GetPaths(state);

            if (ModSettings.Value.UnlevelItems)
            {
                LeveledItemsPatcher.PatchLVLI(state);
                OutfitsPatcher.PatchOutfits(state);
            }

            if (ModSettings.Value.UnlevelNPCs)
            {
                NPCsPatcher.PatchNPCs(state);
            }

            if (ModSettings.Value.UnlevelZones)
            {
                ZonesPatcher.PatchZones(state);
            }

            if (ModSettings.Value.RebalanceEquipment)
            {
                ItemsPatcher.PatchItems(state);
            }
        }
    }
}
